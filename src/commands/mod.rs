//!
//! ## Commands
//!
//! ### 1. `create`
//! The `create` command prompts the user to enter the following parameters:
//!
//! - **Decimals**: Number of decimal places for the token.
//! - **Name**: Name of the token.
//! - **Symbol**: Token symbol (e.g., "SUI").
//! - **Description (optional)**: A brief description of the token.
//! - **Is Frozen**: Indicates whether the token is frozen at creation.
//! - **Environment**: Choose from `devnet`, `testnet`, or `mainnet` (`devnet` is default).
//!
//! Internally, it calls the RPC `create` function. Upon successful execution, the function returns the following:
//! - **Sui token smart contract code**.
//! - **TOML configuration file code**.
//! - **Test code**.
//!
//! Based on these values, the contract will be generated in the current project directory.
//!
//! ### Usage:
//! ```bash
//! sui-token-gen create
//! ```
//!
//! ### Output:
//! ```console
//! foo@bar:~$ sui-token-gen create
//! ? Decimals:  8
//! ? Symbol:  SUI
//! ? Name:  Sui token
//! ? Description:  Fake sui token
//! ? Frozen metadata? Yes
//! ? Select environment: devnet
//! Creating contract...
//! SUCCESS: Contract has been generated!
//! Token Details:
//!   Name: Sui token
//!   Symbol: SUI
//!   Decimals: 8
//!   Environment: devnet
//!   Description: Fake sui token
//!   Frozen: Yes
//! foo@bar:~$
//! ```
//!
//! ### 2. `verify`
//! The `verify` command checks whether a Sui token smart contract was generated using this CLI tool.
//!
//! **Flags:**  
//! `--url`: Validate a remote repository.  
//! `--path`: Validate a local directory path.
//!
//! It supports:
//!
//! Internally, the RPC is called for verification:
//! - **Remote Repository**: By providing a GitHub/GitLab repository URL, the `verify_url` RPC function is called with the URL.
//! - **Local Path**: By providing the file system path to the contract directory, the contract file is read, and the `verify_content` RPC function is called with the contract content.
//!
//! If the provided contract is invalid or was not generated by this tool, an error is thrown.
//!
//! ### Example Usage:
//! **URL**
//! ```bash
//! sui-token-gen verify --url https://github.com/meumar-osec/test-sui-token
//! ```
//!
//! ### Output:
//! ```console
//! foo@bar:~$ sui-token-gen verify --url https://github.com/meumar-osec/test-sui-token
//! foo@bar:~$ SUCCESS: Verified successfully from url: https://github.com/meumar-osec/test-sui-token
//! ```
//!
//! **Path**
//! ```bash
//! sui-token-gen verify --path /Users/developer/Desktop/sui/sui-token
//! ```
//!
//! ### Output:
//! ```console
//! foo@bar:~$ sui-token-gen verify --path /Users/developer/Desktop/sui/sui-token
//! foo@bar:~$ SUCCESS: Verified successfully from path: /Users/developer/Desktop/sui/sui-token
//! ```

pub mod create;
pub mod verify;
